//
//  HomeInteractor.swift
//  MyPokedex
//
//  Created by Pedro  Rey Simons on 01/03/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator and edited by Pedro Rey Simons.
//

import Foundation
import CoreData

final class HomeInteractor:NSObject {
    weak var presenter: HomeInteractorOutputInterface?
    private let operatorManager = OperationsManager()
    private let localDataManager = LocalDataManager.shared
}
extension HomeInteractor: HomeInteractorInputInterface {
    func fetchData() {
        let name:String = Constants.Entities.pokemonEntity
        let descriptors:[NSSortDescriptor] = [NSSortDescriptor(key: Constants.Entities.pokemonAttributes.id, ascending: true)]
        let fetchRequest = NSFetchRequest<NSFetchRequestResult>(entityName: name)
        fetchRequest.sortDescriptors = descriptors
        
        localDataManager.readInstances(fetchRequest: fetchRequest) { (result) in
            switch result{
                case .success(let objects):
                    self.presenter?.fetchDataFinished(.success(objects as! [PokemonEntity]))
                case .failure(let error):
                    self.presenter?.fetchDataFinished(.failure(error))
            }
        }
    }
    func resetDataBase(){
        let startTime = CFAbsoluteTimeGetCurrent()
        operatorManager.getAndSaveData { (result) in
            switch result{
                case .success(_):
                    print("Time elapsed: \(CFAbsoluteTimeGetCurrent() - startTime) sec.")
                    self.presenter?.resetDataBaseFinished(.success(()))
                case .failure(let error):
                    print("Time elapsed: \(CFAbsoluteTimeGetCurrent() - startTime) sec.")
                    self.presenter?.resetDataBaseFinished(.failure(error))
            }
        }
    }
    

}
